// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SfiziAmerica.DataAccessLayer.ModelContext;

namespace SfiziAmerica.DataAccessLayer.Migrations
{
    [DbContext(typeof(SfizilDatabaseModelContext))]
    [Migration("20230111184911_IsMainActive")]
    partial class IsMainActive
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.About", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("About", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.ApplicationForm", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ApplicationForm", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.BookComment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BookComment", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.CategoryMenu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MenuCategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MenuID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("MenuCategoryID");

                    b.HasIndex("MenuID");

                    b.ToTable("CategoryMenu", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Catering", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentCategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("parentCateringID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ParentCategoryID");

                    b.ToTable("Catering", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.CateringMenu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CateringID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CateringID");

                    b.ToTable("CateringMenu", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.ContactForm", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactForm", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.ContactInformation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactInformation", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.CustomerSigin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomerSigin", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Event", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.HR", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HR", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.MailSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senderMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senderMailPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serverMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serverPort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MailSetting", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Menu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Menu", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.MenuCategory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MenuCategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MenuCategoryID");

                    b.ToTable("MenuCategory", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.MenuSeo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookKeywrods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MenuSeo", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Mision", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Mision", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Rezervation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Person")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rezervation", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Slider", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Slider", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.SocialMedia", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SocialMedia", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.UserMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserRoleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("UserMember", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.UserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserRole", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Vision", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vision", "dbo");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.CategoryMenu", b =>
                {
                    b.HasOne("SfiziAmerica.EntityLayer.Model.MenuCategory", "MenuCategory")
                        .WithMany("CategoryMenus")
                        .HasForeignKey("MenuCategoryID");

                    b.HasOne("SfiziAmerica.EntityLayer.Model.Menu", "Menu")
                        .WithMany("CategoryMenus")
                        .HasForeignKey("MenuID");

                    b.Navigation("Menu");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Catering", b =>
                {
                    b.HasOne("SfiziAmerica.EntityLayer.Model.Catering", "ParentCategory")
                        .WithMany("Caterings")
                        .HasForeignKey("ParentCategoryID");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.CateringMenu", b =>
                {
                    b.HasOne("SfiziAmerica.EntityLayer.Model.Catering", "Catering")
                        .WithMany("CateringMenus")
                        .HasForeignKey("CateringID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catering");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.MenuCategory", b =>
                {
                    b.HasOne("SfiziAmerica.EntityLayer.Model.MenuCategory", "ParentMenuCategory")
                        .WithMany("MenuCategories")
                        .HasForeignKey("MenuCategoryID");

                    b.Navigation("ParentMenuCategory");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.UserMember", b =>
                {
                    b.HasOne("SfiziAmerica.EntityLayer.Model.UserRole", "UserRole")
                        .WithMany("UserMembers")
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Catering", b =>
                {
                    b.Navigation("CateringMenus");

                    b.Navigation("Caterings");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.Menu", b =>
                {
                    b.Navigation("CategoryMenus");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.MenuCategory", b =>
                {
                    b.Navigation("CategoryMenus");

                    b.Navigation("MenuCategories");
                });

            modelBuilder.Entity("SfiziAmerica.EntityLayer.Model.UserRole", b =>
                {
                    b.Navigation("UserMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
